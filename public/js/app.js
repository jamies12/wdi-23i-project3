"use strict";function Router(e,t){e.state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("moodIndex",{url:"/moodIndex",templateUrl:"/templates/moodIndex.html"}).state("userForm",{url:"/userForm",templateUrl:"/templates/userForm.html",controller:"UserFormController as userForm"}).state("userData",{url:"/userData",templateUrl:"/templates/userData.html",controller:"UserDataController as userData"}).state("soundScapeExperience",{url:"/experiences/soundscape",templateUrl:"/templates/sessions/soundScapeExperience.html",controller:"SoundScapeController as soundScape"}).state("instrumentExperience",{url:"/experiences/instrument",templateUrl:"/templates/sessions/instrumentExperience.html",controller:"InstrumentExperienceController as instrumentExperience"}).state("breathingExercise",{url:"/experiences/breathing",templateUrl:"/templates/sessions/breathingExercise.html",controller:"BreathingExerciseController as breathingExercise"}).state("elizaChatBot",{url:"/experiences/elizaChatBot",templateUrl:"/templates/sessions/elizaChatBot.html",controller:"ElizaChatBotController as elizaChatBot"}).state("moodCarousel",{url:"/templates/moodCarousel",templateUrl:"/templates/moodCarousel.html",controller:"MoodCarouselController as moodCarousel"}),t.otherwise("/moodIndex")}function Auth(e){e.loginUrl="/login",e.signupUrl="/register",e.tokenPrefix="",e.facebook({clientId:"1114403908656537"}),e.github({clientId:"f226d5ade062bb0c6600"})}function RegisterController(e,t){function o(){e.signup(r.user).then(function(){t.go("login")})}var r=this;r.user={},r.submit=o}function LoginController(e,t){function o(){e.login(l.credentials).then(function(){t.go("userForm")})}function r(o){e.authenticate(o).then(function(e){console.log(e),t.go("moodIndex")})}var l=this;l.credentials={},l.submit=o,l.authenticate=r}function SoundScapeController(){}function InstrumentExperienceController(){}function BreathingExerciseController(){}function ElizaChatBotController(){}function MoodCarouselController(){}function MainController(e,t,o){function r(){e.logout().then(function(){t.go("moodIndex")})}function l(o,r){n.message=null,console.log(r,o),!e.isAuthenticated()&&a.includes(r.name)&&(o.preventDefault(),n.message="You must be logged in to go there!",t.go("login"))}var n=this;n.isLoggedIn=e.isAuthenticated,n.message=null;var a=["moodIndex"];o.$on("$stateChangeStart",l),n.logout=r}function User(e){return new e("/users/:id",{id:"@_id"},{update:{method:"PUT"}})}function UserFormController(e,t,o){function r(){l.user.$update(function(){console.log("your data",l.user),o.go("moodIndex")})}var l=this;l.user=t.get({id:e.getPayload()._id}),l.submit=r}function UserDataController(e,t){var o=this;o.user=t.get({id:e.getPayload()._id})}angular.module("moodApp",["ngResource","ui.router","satellizer","angular-carousel"]).config(Router).config(Auth),Router.$inject=["$stateProvider","$urlRouterProvider"],Auth.$inject=["$authProvider"],angular.module("moodApp").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("moodApp").controller("SoundScapeController",SoundScapeController).controller("InstrumentExperienceController",InstrumentExperienceController).controller("BreathingExerciseController",BreathingExerciseController).controller("ElizaChatBotController",ElizaChatBotController).controller("MoodCarouselController",MoodCarouselController),SoundScapeController.$inject=[],InstrumentExperienceController.$inject=[],BreathingExerciseController.$inject=[],ElizaChatBotController.$inject=[],MoodCarouselController.$inject=[],angular.module("moodApp").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("moodApp").factory("User",User),User.$inject=["$resource"],angular.module("moodApp").controller("UserFormController",UserFormController).controller("UserDataController",UserDataController),UserFormController.$inject=["$auth","User","$state"],UserDataController.$inject=["$auth","User"];
//# sourceMappingURL=app.js.map
