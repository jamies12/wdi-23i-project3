{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/experience.js","models/journal.js","js/controllers/journals.js","js/controllers/main.js","models/picture.js","js/controllers/pictures.js","models/user.js","js/controllers/user.js","models/video.js","js/controllers/videos.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","github","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","provider","res","console","log","SoundScapeController","InstrumentExperienceController","BreathingExerciseController","ElizaChatBotController","MoodCarouselController","Journal","$resource","id","update","method","JournalsIndexController","User","journalsIndex","get","getPayload","_id","all","journals","query","JournalsShowController","remove","journalsShow","journal","params","isLoggedIn","isAuthenticated","delete","JournalsNewController","createJournal","save","journalsNew","create","JournalsEditController","updateJournal","journalsEdit","MainController","$rootScope","logout","secureState","e","toState","main","message","protectedStates","includes","name","preventDefault","$on","Pictures","PicturesIndexController","picturesIndex","PicturesShowController","Picture","picturesShow","picture","PicturesNewController","createPicture","picturesNew","UserFormController","userForm","$update","UserDataController","userData","Videos","VideosIndexController","videosIndex","VideosShowController","Video","videosShow","video","VideosNewController","createVideo","videosNew","angular","module","config","$inject","factory"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,8BAGdF,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,UACLC,IAAK,UACLC,YAAa,wCAEdF,MAAM,kBACLC,IAAK,mBACLC,YAAa,8CACbC,WAAY,6CAEbH,MAAM,gBACLC,IAAK,iBACLC,YAAa,4CACbC,WAAY,yCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2CACbC,WAAY,6CAEbH,MAAM,kBACLC,IAAK,mBACLC,YAAa,yCACbC,WAAY,yCAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,wBACLC,IAAK,0BACLC,YAAa,gDACbC,WAAY,uCAEbH,MAAM,wBACLC,IAAK,0BACLC,YAAa,gDACbC,WAAY,2DAEbH,MAAM,qBACLC,IAAK,yBACLC,YAAa,6CACbC,WAAY,qDAEbH,MAAM,gBACLC,IAAK,4BACLC,YAAa,wCACbC,WAAY,2CAEbH,MAAM,gBACLC,IAAK,0BACLC,YAAa,+BACbC,WAAY,2CAGhBJ,EAAmBK,UAAU,cAG/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAC1BF,EAAcG,YAAc,GAC5BH,EAAcI,UACZC,SAAU,qBAEZL,EAAcM,QACZD,SAAU,yBCzFd,QAASE,oBAAmBC,EAAOC,GAGjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,WALhB,GAAMH,GAAWI,IACjBJ,GAASC,QAOTD,EAASF,OAASA,EAKpB,QAASO,iBAAgBT,EAAOC,GAG9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACjBL,KAAK,WACJL,EAAOM,GAAG,cAGd,QAASK,GAAaC,GACpBb,EAAMY,aAAaC,GAClBP,KAAK,SAACQ,GACLC,QAAQC,IAAIF,GACZb,EAAOM,GAAG,eAZd,GAAMG,GAAQF,IACdE,GAAMC,eAcND,EAAMR,OAASA,EACfQ,EAAME,aAAeA,EC3BvB,QAASK,yBAKT,QAASC,mCAKT,QAASC,gCAKT,QAASC,2BAKT,QAASC,2BCzBT,QAASC,SAAQC,GACf,MAAO,IAAIA,GAAU,iBAAmBC,GAAI,SAC1CC,QAAUC,OAAQ,SCCtB,QAASC,yBAAwBL,EAASM,EAAM5B,GAC9C,GAAM6B,GAAgBrB,IAEtBqB,GAAcxB,KAAOuB,EAAKE,KAAMN,GAAIxB,EAAM+B,aAAaC,MACvDH,EAAcI,IAAMX,EAAQQ,QAC5Bf,QAAQC,IAAIa,EAAcxB,KAAK6B,YAC/BnB,QAAQC,IAAIa,EAAcI,KAC1BJ,EAAcxB,KAAK4B,IAAMX,EAAQa,QAInC,QAASC,wBAAuBd,EAASrB,EAAQD,GAM/C,QAASqC,KACPf,EAAQe,QAASb,GAAIc,EAAaC,QAAQP,KAAO,WAC/C/B,EAAOM,GAAG,cAPd,GAAM+B,GAAe9B,IAErB8B,GAAaC,QAAUjB,EAAQQ,IAAI7B,EAAOuC,QAC1CF,EAAaG,WAAazC,EAAM0C,gBAQhCJ,EAAaK,OAASN,EAIxB,QAASO,uBAAsBtB,EAASrB,EAAQ2B,EAAM5B,GAOpD,QAAS6C,KACP9B,QAAQC,IAAIM,GACZA,EAAQwB,KAAKC,EAAY1C,KAAKkC,QAAS,WACrCtC,EAAOM,GAAG,cATd,GAAMwC,GAAcvC,IAEpBuC,GAAY1C,KAAOuB,EAAKE,KAAMN,GAAIxB,EAAM+B,aAAaC,MAErDe,EAAY1C,KAAKkC,WAUjBQ,EAAYC,OAASH,EAIvB,QAASI,wBAAuB3B,EAASrB,GAIvC,QAASiD,KACP5B,EAAQG,OAAO0B,EAAaZ,QAAS,WACnCtC,EAAOM,GAAG,WAAYN,EAAOuC,UALjC,GAAMW,GAAe3C,IACrB2C,GAAaZ,QAAUjB,EAAQQ,IAAI7B,EAAOuC,QAQ1CW,EAAa1B,OAASyB,ECzDxB,QAASE,gBAAepD,EAAOC,EAAQoD,GAIrC,QAASC,KACPtD,EAAMsD,SACLhD,KAAK,WACJL,EAAOM,GAAG,eAId,QAASgD,GAAYC,EAAGC,GACtBC,EAAKC,QAAU,KACf5C,QAAQC,IAAIyC,EAASD,IACjBxD,EAAM0C,mBAAqBkB,EAAgBC,SAASJ,EAAQK,QAC9DN,EAAEO,iBACFL,EAAKC,QAAU,qCACf1D,EAAOM,GAAG,UAhBd,GAAMmD,GAAOlD,IACbkD,GAAKjB,WAAazC,EAAM0C,gBACxBgB,EAAKC,QAAU,IAOf,IAAMC,IAAmB,YAUzBP,GAAWW,IAAI,oBAAqBT,GACpCG,EAAKJ,OAASA,ECtBhB,QAASW,UAAS1C,GAChB,MAAO,IAAIA,GAAU,iBAAmBC,GAAI,SAC1CC,QAAUC,OAAQ,SCDtB,QAASwC,yBAAwBD,GAC/B,GAAME,GAAgB3D,IACtBO,SAAQC,IAAIiD,GAEZE,EAAclC,IAAMgC,EAAS9B,QAI/B,QAASiC,wBAAuBC,EAASpE,EAAQD,GAC/C,GAAMsE,GAAe9D,IAErB8D,GAAaC,QAAUF,EAAQvC,IAAI7B,EAAOuC,QAC1C8B,EAAa7B,WAAazC,EAAM0C,gBAIlC,QAAS8B,uBAAsBH,EAASpE,GAKtC,QAASwE,KACPJ,EAAQvB,KAAK4B,EAAYH,QAAS,WAChCtE,EAAOM,GAAG,oBANd,GAAMmE,GAAclE,IAEpBkE,GAAYH,WAQZG,EAAY1B,OAASyB,EC7BvB,QAAS7C,MAAKL,GACZ,MAAO,IAAIA,GAAU,cAAgBC,GAAI,SACvCC,QAAUC,OAAQ,SCDtB,QAASiD,oBAAmB3E,EAAO4B,EAAM3B,GAKvC,QAASC,KACP0E,EAASvE,KAAKwE,QAAQ,WACpB9D,QAAQC,IAAI,YAAa4D,EAASvE,MAClCJ,EAAOM,GAAG,eAPd,GAAMqE,GAAWpE,IAEjBoE,GAASvE,KAAOuB,EAAKE,KAAMN,GAAIxB,EAAM+B,aAAaC,MASlD4C,EAAS1E,OAASA,EAKpB,QAAS4E,oBAAoB9E,EAAO4B,GAClC,GAAMmD,GAAWvE,IAEjBuE,GAAS1E,KAAOuB,EAAKE,KAAMN,GAAIxB,EAAM+B,aAAaC,MCpBpD,QAASgD,QAAOzD,GACd,MAAO,IAAIA,GAAU,eAAiBC,GAAI,SACxCC,QAAUC,OAAQ,SCDtB,QAASuD,uBAAsBD,GAC7B,GAAME,GAAc1E,IACpBO,SAAQC,IAAIgE,GAEZE,EAAYjD,IAAM+C,EAAO7C,QAI3B,QAASgD,sBAAqBC,EAAOnF,EAAQD,GAC3C,GAAMqF,GAAa7E,IAEnB6E,GAAWC,MAAQF,EAAMtD,IAAI7B,EAAOuC,QACpC6C,EAAW5C,WAAazC,EAAM0C,gBAIhC,QAAS6C,qBAAoBH,EAAOnF,GAKlC,QAASuF,KACPJ,EAAMtC,KAAK2C,EAAUH,MAAO,WAC1BrF,EAAOM,GAAG,kBANd,GAAMkF,GAAYjF,IAElBiF,GAAUH,SAQVG,EAAUzC,OAASwC,EXjCrBE,QACGC,OAAO,WAAY,aAAc,YAAa,aAAc,qBAC5DC,OAAO7G,QACP6G,OAAOrG,MAEVR,OAAO8G,SAAW,iBAAkB,sBAgFpCtG,KAAKsG,SAAW,iBCrFhBH,QAAQC,OAAO,WACZtG,WAAW,qBAAsBU,oBACjCV,WAAW,kBAAmBoB,iBAEjCV,mBAAmB8F,SAAW,QAAS,UAcvCpF,gBAAgBoF,SAAW,QAAS,UClBpCH,QAAQC,OAAO,WACZtG,WAAW,uBAAwB4B,sBACnC5B,WAAW,iCAAkC6B,gCAC7C7B,WAAW,8BAA+B8B,6BAC1C9B,WAAW,yBAA0B+B,wBACrC/B,WAAW,yBAA0BgC,wBAGxCJ,qBAAqB4E,WAKrB3E,+BAA+B2E,WAK/B1E,4BAA4B0E,WAK5BzE,uBAAuByE,WAKvBxE,uBAAuBwE,WC5BvBH,QAAQC,OAAO,WACZG,QAAQ,UAAWxE,SAEtBA,QAAQuE,SAAW,aCHnBH,QAAQC,OAAO,WACZtG,WAAW,0BAA2BsC,yBACtCtC,WAAW,yBAA0B+C,wBACrC/C,WAAW,wBAAyBuD,uBACpCvD,WAAW,yBAA0B4D,wBAExCtB,wBAAwBkE,SAAW,UAAW,OAAQ,SAWtDzD,uBAAuByD,SAAW,UAAW,SAAU,SAgBvDjD,sBAAsBiD,SAAW,UAAW,SAAU,OAAQ,SAmB9D5C,uBAAuB4C,SAAW,UAAW,UCpD7CH,QAAQC,OAAO,WACZtG,WAAW,iBAAkB+D,gBAIhCA,eAAeyC,SAAW,QAAS,SAAU,cCL7CH,QAAQC,OAAO,WACZG,QAAQ,WAAY7B,UAEvBA,SAAS4B,SAAW,aCHpBH,QAAQC,OAAO,WACZtG,WAAW,0BAA2B6E,yBACtC7E,WAAW,yBAA0B+E,wBACrC/E,WAAW,wBAAyBmF,uBAEvCN,wBAAwB2B,SAAW,YAQnCzB,uBAAuByB,SAAW,UAAW,SAAU,SAQvDrB,sBAAsBqB,SAAW,UAAW,UCrB5CH,QAAQC,OAAO,WACZG,QAAQ,OAAQlE,MAEnBA,KAAKiE,SAAW,aCHhBH,QAAQC,OAAO,WACZtG,WAAW,qBAAsBsF,oBACjCtF,WAAW,qBAAsByF,oBAEpCH,mBAAmBkB,SAAW,QAAS,OAAQ,UAiB/Cf,mBAAmBe,SAAW,QAAS,QCrBvCH,QAAQC,OAAO,WACZG,QAAQ,SAAUd,QAErBA,OAAOa,SAAW,aCHlBH,QAAQC,OAAO,WACZtG,WAAW,wBAAyB4F,uBACpC5F,WAAW,uBAAwB8F,sBACnC9F,WAAW,sBAAuBkG,qBAErCN,sBAAsBY,SAAW,UAQjCV,qBAAqBU,SAAW,QAAS,SAAU,SAQnDN,oBAAoBM,SAAW,QAAS","file":"app.js","sourcesContent":["angular\n  .module('moodApp', ['ngResource', 'ui.router', 'satellizer', 'angular-carousel'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('moodIndex', {\n      url: '/moodIndex',\n      templateUrl: '/templates/moodIndex.html'\n      // controller: 'moodIndexController as moodIndex'\n    })\n    .state('userForm', {\n      url: '/userForm',\n      templateUrl: '/templates/userForm.html',\n      controller: 'UserFormController as userForm'\n    })\n    .state('search', {\n      url: '/search',\n      templateUrl: '/templates/searchEngine/search.html'\n    })\n    .state('searchPictures', {\n      url: '/search/pictures',\n      templateUrl: '/templates/searchEngine/searchPictures.html',\n      controller: 'PicturesIndexController as picturesIndex'\n    })\n    .state('searchVideos', {\n      url: '/search/videos',\n      templateUrl: '/templates/searchEngine/searchVideos.html',\n      controller: 'VideosIndexController as videosIndex'\n    })\n    .state('journals', {\n      url: '/journals',\n      templateUrl: '/templates/journals/journalsEntries.html',\n      controller: 'JournalsIndexController as journalsIndex'\n    })\n    .state('journalsCreate', {\n      url: '/journals/create',\n      templateUrl: '/templates/journals/journalCreate.html',\n      controller: 'JournalsNewController as journalsNew'\n    })\n    .state('userData', {\n      url: '/userData',\n      templateUrl: '/templates/userData.html',\n      controller: 'UserDataController as userData'\n    })\n    .state('soundScapeExperience', {\n      url: '/experiences/soundscape',\n      templateUrl: '/templates/sessions/soundScapeExperience.html',\n      controller: 'SoundScapeController as soundScape'\n    })\n    .state('instrumentExperience', {\n      url: '/experiences/instrument',\n      templateUrl: '/templates/sessions/instrumentExperience.html',\n      controller: 'InstrumentExperienceController as instrumentExperience'\n    })\n    .state('breathingExercise', {\n      url: '/experiences/breathing',\n      templateUrl: '/templates/sessions/breathingExercise.html',\n      controller: 'BreathingExerciseController as breathingExercise'\n    })\n    .state('elizaChatBot', {\n      url: '/experiences/elizaChatBot',\n      templateUrl: '/templates/sessions/elizaChatBot.html',\n      controller: 'ElizaChatBotController as elizaChatBot'\n    })\n    .state('moodCarousel', {\n      url: '/templates/moodCarousel',\n      templateUrl: '/templates/moodCarousel.html',\n      controller: 'MoodCarouselController as moodCarousel'\n    });\n\n  $urlRouterProvider.otherwise('/moodIndex');\n}\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n  $authProvider.tokenPrefix = '';\n  $authProvider.facebook({\n    clientId: '1114403908656537'\n  });\n  $authProvider.github({\n    clientId: 'f226d5ade062bb0c6600'\n  });\n}\n","angular.module('moodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  register.submit = submit;\n}\n\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('userForm');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n      $state.go('moodIndex');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('moodApp')\n  .controller('SoundScapeController', SoundScapeController)\n  .controller('InstrumentExperienceController', InstrumentExperienceController)\n  .controller('BreathingExerciseController', BreathingExerciseController)\n  .controller('ElizaChatBotController', ElizaChatBotController)\n  .controller('MoodCarouselController', MoodCarouselController);\n\n\nSoundScapeController.$inject = [];\nfunction SoundScapeController() {\n\n}\n\nInstrumentExperienceController.$inject = [];\nfunction InstrumentExperienceController() {\n\n}\n\nBreathingExerciseController.$inject = [];\nfunction BreathingExerciseController() {\n\n}\n\nElizaChatBotController.$inject = [];\nfunction ElizaChatBotController() {\n\n}\n\nMoodCarouselController.$inject = [];\nfunction MoodCarouselController() {\n\n}\n","angular.module('moodApp')\n  .factory('Journal', Journal);\n\nJournal.$inject = ['$resource'];\nfunction Journal($resource) {\n  return new $resource('/journals/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('moodApp')\n  .controller('JournalsIndexController', JournalsIndexController)\n  .controller('JournalsShowController', JournalsShowController)\n  .controller('JournalsNewController', JournalsNewController)\n  .controller('JournalsEditController', JournalsEditController);\n\nJournalsIndexController.$inject = ['Journal', 'User', '$auth'];\nfunction JournalsIndexController(Journal, User, $auth) {\n  const journalsIndex = this;\n\n  journalsIndex.user = User.get({ id: $auth.getPayload()._id });\n  journalsIndex.all = Journal.get([]);\n  console.log(journalsIndex.user.journals());\n  console.log(journalsIndex.all);\n  journalsIndex.user.all = Journal.query();\n}\n\nJournalsShowController.$inject = ['Journal', '$state', '$auth'];\nfunction JournalsShowController(Journal, $state, $auth) {\n  const journalsShow = this;\n\n  journalsShow.journal = Journal.get($state.params);\n  journalsShow.isLoggedIn = $auth.isAuthenticated;\n\n  function remove() {\n    Journal.remove({ id: journalsShow.journal._id }, () => {\n      $state.go('journals');\n    });\n  }\n\n  journalsShow.delete = remove;\n}\n\nJournalsNewController.$inject = ['Journal', '$state', 'User', '$auth'];\nfunction JournalsNewController(Journal, $state, User, $auth) {\n  const journalsNew = this;\n\n  journalsNew.user = User.get({ id: $auth.getPayload()._id });\n\n  journalsNew.user.journal = {};\n\n  function createJournal() {\n    console.log(Journal);\n    Journal.save(journalsNew.user.journal, () => {\n      $state.go('journals');\n\n    });\n  }\n\n  journalsNew.create = createJournal;\n}\n\nJournalsEditController.$inject = ['Journal', '$state'];\nfunction JournalsEditController(Journal, $state) {\n  const journalsEdit = this;\n  journalsEdit.journal = Journal.get($state.params);\n\n  function updateJournal() {\n    Journal.update(journalsEdit.journal, () => {\n      $state.go('journals', $state.params);\n    });\n  }\n\n  journalsEdit.update = updateJournal;\n}\n","angular.module('moodApp')\n  .controller('MainController', MainController);\n  // .controller('MoodIndexController', MoodIndexController );\n\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('moodIndex');\n    });\n  }\n  const protectedStates = ['moodIndex'];\n  function secureState(e, toState) {\n    main.message = null;\n    console.log(toState, e);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n}\n","angular.module('moodApp')\n  .factory('Pictures', Pictures);\n\nPictures.$inject = ['$resource'];\n\nfunction Pictures($resource) {\n  return new $resource('/pictures/:id', { id: '@_id' }, {\n    update: { method: 'PUT'}\n  });\n}\n","angular.module('moodApp')\n  .controller('PicturesIndexController', PicturesIndexController)\n  .controller('PicturesShowController', PicturesShowController)\n  .controller('PicturesNewController', PicturesNewController);\n\nPicturesIndexController.$inject = ['Pictures'];\nfunction PicturesIndexController(Pictures) {\n  const picturesIndex = this;\n  console.log(Pictures);\n\n  picturesIndex.all = Pictures.query();\n}\n\nPicturesShowController.$inject = ['Picture', '$state', '$auth'];\nfunction PicturesShowController(Picture, $state, $auth) {\n  const picturesShow = this;\n\n  picturesShow.picture = Picture.get($state.params);\n  picturesShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nPicturesNewController.$inject = ['Picture', '$state'];\nfunction PicturesNewController(Picture, $state) {\n  const picturesNew = this;\n\n  picturesNew.picture = {};\n\n  function createPicture() {\n    Picture.save(picturesNew.picture, () => {\n      $state.go('searchPictures');\n    });\n  }\n\n  picturesNew.create = createPicture;\n}\n","angular.module('moodApp')\n  .factory('User', User);\n\nUser.$inject = ['$resource'];\nfunction User($resource) {\n  return new $resource('/users/:id', { id: '@_id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('moodApp')\n  .controller('UserFormController', UserFormController)\n  .controller('UserDataController', UserDataController);\n\nUserFormController.$inject = ['$auth', 'User', '$state'];\nfunction UserFormController($auth, User, $state) {\n  const userForm = this;\n\n  userForm.user = User.get({ id: $auth.getPayload()._id });\n\n  function submit() {\n    userForm.user.$update(() => {\n      console.log('your data', userForm.user);\n      $state.go('moodIndex');\n    });\n  }\n\n  userForm.submit = submit;\n\n}\n\nUserDataController.$inject = ['$auth', 'User' ];\nfunction UserDataController ($auth, User ) {\n  const userData = this;\n\n  userData.user = User.get({ id: $auth.getPayload()._id });\n\n}\n","angular.module('moodApp')\n  .factory('Videos', Videos);\n\nVideos.$inject = ['$resource'];\n\nfunction Videos($resource) {\n  return new $resource('/videos/:id', { id: '@_id' }, {\n    update: { method: 'PUT'}\n  });\n}\n","angular.module('moodApp')\n  .controller('VideosIndexController', VideosIndexController)\n  .controller('VideosShowController', VideosShowController)\n  .controller('VideosNewController', VideosNewController);\n\nVideosIndexController.$inject = ['Videos'];\nfunction VideosIndexController(Videos) {\n  const videosIndex = this;\n  console.log(Videos);\n\n  videosIndex.all = Videos.query();\n}\n\nVideosShowController.$inject = ['Video', '$state', '$auth'];\nfunction VideosShowController(Video, $state, $auth) {\n  const videosShow = this;\n\n  videosShow.video = Video.get($state.params);\n  videosShow.isLoggedIn = $auth.isAuthenticated;\n}\n\nVideosNewController.$inject = ['Video', '$state'];\nfunction VideosNewController(Video, $state) {\n  const videosNew = this;\n\n  videosNew.video = {};\n\n  function createVideo() {\n    Video.save(videosNew.video, () => {\n      $state.go('searchVideos');\n    });\n  }\n\n  videosNew.create = createVideo;\n}\n"]}