{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/main.js"],"names":["Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","Auth","$authProvider","loginUrl","signupUrl","tokenPrefix","facebook","clientId","github","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","authenticate","provider","res","console","log","MainController","$rootScope","logout","secureState","e","toState","main","message","isAuthenticated","protectedStates","includes","name","preventDefault","isLoggedIn","$on","angular","module","config","$inject"],"mappings":"YAMA,SAASA,QAAOC,EAAgBC,GAC9BD,EACGE,MAAM,SACLC,IAAK,SACLC,YAAa,wBACbC,WAAY,6BAEbH,MAAM,YACLC,IAAK,YACLC,YAAa,2BACbC,WAAY,mCAEbH,MAAM,aACLC,IAAK,aACLC,YAAa,4BACbC,WAAY,qCAGhBJ,EAAmBK,UAAU,cAG/B,QAASC,MAAKC,GACZA,EAAcC,SAAW,SACzBD,EAAcE,UAAY,YAC1BF,EAAcG,YAAc,GAC5BH,EAAcI,UACZC,SAAU,qBAEZL,EAAcM,QACZD,SAAU,yBC/Bd,QAASE,oBAAmBC,EAAOC,GAGjC,QAASC,KACPF,EAAMG,OAAOC,EAASC,MACnBC,KAAK,WACJL,EAAOM,GAAG,WALhB,GAAMH,GAAWI,IACjBJ,GAASC,QAOTD,EAASF,OAASA,EAGpB,QAASO,iBAAgBT,EAAOC,GAG9B,QAASC,KACPF,EAAMU,MAAMA,EAAMC,aACjBL,KAAK,WACJL,EAAOM,GAAG,eAGd,QAASK,GAAaC,GACpBb,EAAMY,aAAaC,GAClBP,KAAK,SAACQ,GACLC,QAAQC,IAAIF,GACZb,EAAOM,GAAG,eAZd,GAAMG,GAAQF,IACdE,GAAMC,eAcND,EAAMR,OAASA,EACfQ,EAAME,aAAeA,EC9BvB,QAASK,gBAAejB,EAAOC,EAAQiB,GAIrC,QAASC,KACPnB,EAAMmB,SACLb,KAAK,WACJL,EAAOM,GAAG,eAId,QAASa,GAAYC,EAAGC,GACtBC,EAAKC,QAAU,KACfT,QAAQC,IAAIM,EAASD,IACjBrB,EAAMyB,mBAAqBC,EAAgBC,SAASL,EAAQM,QAC9DP,EAAEQ,iBACFN,EAAKC,QAAU,qCACfvB,EAAOM,GAAG,UAhBd,GAAMgB,GAAOf,IACbe,GAAKO,WAAa9B,EAAMyB,gBACxBF,EAAKC,QAAU,IAOf,IAAME,IAAmB,YAUzBR,GAAWa,IAAI,oBAAqBX,GACpCG,EAAKJ,OAASA,EFxBhBa,QACGC,OAAO,WAAY,aAAc,YAAa,eAC9CC,OAAOnD,QACPmD,OAAO3C,MAEVR,OAAOoD,SAAW,iBAAkB,sBAqBpC5C,KAAK4C,SAAW,iBC1BhBH,QAAQC,OAAO,WACZ5C,WAAW,qBAAsBU,oBACjCV,WAAW,kBAAmBoB,iBACjCV,mBAAmBoC,SAAW,QAAS,UAYvC1B,gBAAgB0B,SAAW,QAAS,UCfpCH,QAAQC,OAAO,WACZ5C,WAAW,iBAAkB4B,gBAChCA,eAAekB,SAAW,QAAS,SAAU","file":"app.js","sourcesContent":["angular\n  .module('moodApp', ['ngResource', 'ui.router', 'satellizer'])\n  .config(Router)\n  .config(Auth);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('moodIndex', {\n      url: '/moodIndex',\n      templateUrl: '/templates/moodIndex.html',\n      controller: 'moodIndexController as moodIndex'\n    });\n\n  $urlRouterProvider.otherwise('/moodIndex');\n}\nAuth.$inject = ['$authProvider'];\nfunction Auth($authProvider) {\n  $authProvider.loginUrl = '/login';\n  $authProvider.signupUrl = '/register';\n  $authProvider.tokenPrefix = '';\n  $authProvider.facebook({\n    clientId: '1114403908656537'\n  });\n  $authProvider.github({\n    clientId: 'f226d5ade062bb0c6600'\n  });\n}\n","angular.module('moodApp')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n  register.user = {};\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n  register.submit = submit;\n}\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n  login.credentials = {};\n  function submit() {\n    $auth.login(login.credentials)\n    .then(() => {\n      $state.go('moodIndex');\n    });\n  }\n  function authenticate(provider) {\n    $auth.authenticate(provider)\n    .then((res) => {\n      console.log(res);\n      $state.go('moodIndex');\n    });\n  }\n  login.submit = submit;\n  login.authenticate = authenticate;\n}\n","angular.module('moodApp')\n  .controller('MainController', MainController);\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope) {\n  const main = this;\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.message = null;\n  function logout() {\n    $auth.logout()\n    .then(() => {\n      $state.go('moodIndex');\n    });\n  }\n  const protectedStates = ['moodIndex'];\n  function secureState(e, toState) {\n    main.message = null;\n    console.log(toState, e);\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)) {\n      e.preventDefault();\n      main.message = 'You must be logged in to go there!';\n      $state.go('login');\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n  main.logout = logout;\n}\n"]}